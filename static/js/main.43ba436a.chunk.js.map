{"version":3,"sources":["utility.ts","People.tsx","Items.tsx","Bill.tsx","Dinner.tsx","Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["uuid","hex","Date","now","repeat","replace","Math","random","value","floor","toString","People","props","onAddPerson","event","preventDefault","state","personName","addPerson","trim","setState","onChangePerson","target","onRemovePerson","index","removePerson","bind","Box","List","dense","component","this","people","map","person","name","ListItem","button","key","ListItemAvatar","Avatar","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","onClick","TextField","label","required","onChange","React","Component","Items","onAddItem","itemPriceToAdd","itemName","itemNameToAdd","itemPrice","parseFloat","addItem","onChangeItemName","onChangeItemPrice","onRemoveItem","removeItem","items","price","toFixed","type","InputProps","startAdornment","InputAdornment","position","StyledTableCell","withStyles","theme","createStyles","head","backgroundColor","palette","grey","A400","color","common","white","body","fontSize","TableCell","StyledTableRow","root","background","default","TableRow","Bill","onTaxChange","tax","onTipChange","tip","onLinkChange","split","personId","itemId","handleLinkChange","getLinkStatus","undefined","links","includes","getAllFoodPrice","i","reduce","a","b","getPersonFoodPrice","personItems","personIds","filter","item","id","peopleCount","length","push","Object","entries","getPersonTax","totalPrice","totalTax","getPersonTip","totalTip","getTotalPrice","getPersonTotal","TableContainer","Paper","Table","TableHead","TableBody","itemIndex","hover","personIndex","Checkbox","checked","Dinner","indexOf","splice","keys","Divider","Footer","BottomNavigation","showLabels","BottomNavigationAction","className","icon","Link","href","rel","App","Container","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43ba436a.chunk.js","sourcesContent":["export type Item = {\n  id: string;\n  price: number;\n  name?: string;\n}\n\nexport type Person = {\n  id: string;\n  name: string;\n}\n\nexport const ID_DELIMITER = '\\t';\n\nexport const uuid = () => {\n  return hex(Date.now() / 1000) + ' '.repeat(5).replace(/./g, () => hex(Math.random() * 16));\n};\n\nconst hex = (value: number) => {\n  return Math.floor(value).toString(16);\n};\n","import React from 'react';\nimport {\n  Avatar,\n  Box,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  TextField,\n} from '@material-ui/core';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport { Person } from './utility';\n\ninterface IProps {\n  people: Person[];\n  addPerson: (personName: string) => void;\n  removePerson: (index: number) => void;\n}\n\ninterface IState {\n  personName: string;\n}\n\nclass People extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      personName: '',\n    };\n\n    this.onAddPerson = this.onAddPerson.bind(this);\n    this.onChangePerson = this.onChangePerson.bind(this);\n    this.onRemovePerson = this.onRemovePerson.bind(this);\n  }\n\n  onAddPerson = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    if (this.state.personName) {\n      this.props.addPerson(this.state.personName.trim());\n      this.setState({ personName: '' });\n    }\n  };\n\n  onChangePerson = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ personName: event.target.value });\n  };\n\n  onRemovePerson = (event: React.MouseEvent<HTMLButtonElement>, index: number) => {\n    event.preventDefault();\n    this.props.removePerson(index);\n  };\n\n  render() {\n    return (\n      <Box>\n        <List dense={false} component=\"nav\">\n          {this.props.people.map(({ name: person }, index: number) => (\n            <ListItem button key={'person-' + index}>\n              <ListItemAvatar>\n                <Avatar>\n                  <AccountCircleIcon/>\n                </Avatar>\n              </ListItemAvatar>\n\n              <ListItemText primary={person}/>\n\n              <ListItemSecondaryAction>\n                <IconButton\n                  edge=\"start\"\n                  onClick={(event: React.MouseEvent<HTMLButtonElement>) => this.onRemovePerson(event, index)}\n                >\n                  <DeleteIcon/>\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n          <ListItem key=\"person-add\">\n            <ListItemAvatar>\n              <Avatar>\n                <AccountCircleIcon/>\n              </Avatar>\n            </ListItemAvatar>\n\n            <TextField\n              label=\"Person Name\"\n              value={this.state.personName}\n              required={true}\n              onChange={this.onChangePerson}\n            />\n\n            <ListItemSecondaryAction>\n              <IconButton edge=\"start\" onClick={this.onAddPerson}>\n                <PersonAddIcon/>\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </Box>\n    );\n  }\n}\n\nexport default People;\n","import React from 'react';\nimport {\n  Avatar,\n  Box,\n  IconButton,\n  InputAdornment,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  TextField,\n} from '@material-ui/core';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Item } from './utility';\n\ninterface IProps {\n  items: Item[];\n  addItem: (itemName: string, itemPrice: number) => void;\n  removeItem: (index: number) => void;\n}\n\ninterface IState {\n  itemNameToAdd: string;\n  itemPriceToAdd: string;\n}\n\nclass Items extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      itemNameToAdd: '',\n      itemPriceToAdd: '',\n    };\n\n    this.onAddItem = this.onAddItem.bind(this);\n    this.onChangeItemName = this.onChangeItemName.bind(this);\n    this.onRemoveItem = this.onRemoveItem.bind(this);\n  }\n\n  onAddItem = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    if (this.state.itemPriceToAdd) {\n      const itemName = this.state.itemNameToAdd.trim();\n      const itemPrice = parseFloat(this.state.itemPriceToAdd);\n      this.props.addItem(itemName, itemPrice);\n      this.setState({\n        itemNameToAdd: '',\n        itemPriceToAdd: '',\n      });\n    }\n  };\n\n  onChangeItemName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemNameToAdd: event.target.value });\n  };\n\n  onChangeItemPrice = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemPriceToAdd: event.target.value });\n  };\n\n  onRemoveItem = (event: React.MouseEvent<HTMLButtonElement>, index: number) => {\n    event.preventDefault();\n    this.props.removeItem(index);\n  };\n\n  render() {\n    return (\n      <Box>\n        <List dense={false} component=\"nav\">\n          {this.props.items.map(({ name, price }, index: number) => (\n            <ListItem button key={'person-' + index}>\n              <ListItemAvatar>\n                <Avatar>\n                  <FastfoodIcon/>\n                </Avatar>\n              </ListItemAvatar>\n\n              <ListItemText primary={'$' + price.toFixed(2) + (name ? ' ' + name : '')}/>\n\n              <ListItemSecondaryAction>\n                <IconButton\n                  edge=\"start\"\n                  onClick={(event: React.MouseEvent<HTMLButtonElement>) => this.onRemoveItem(event, index)}\n                >\n                  <DeleteIcon/>\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n          <ListItem key=\"person-add\">\n            <ListItemAvatar>\n              <Avatar>\n                <FastfoodIcon/>\n              </Avatar>\n            </ListItemAvatar>\n\n            <TextField\n              label=\"Item Price\"\n              type=\"number\"\n              value={this.state.itemPriceToAdd}\n              required={true}\n              onChange={this.onChangeItemPrice}\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <TextField\n              label=\"Item Name\"\n              value={this.state.itemNameToAdd}\n              required={false}\n              onChange={this.onChangeItemName}\n            />\n\n            <ListItemSecondaryAction>\n              <IconButton edge=\"start\" onClick={this.onAddItem}>\n                <AddIcon/>\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </Box>\n    );\n  }\n}\n\nexport default Items;\n","import React from 'react';\nimport {\n  Checkbox,\n  InputAdornment,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { createStyles, Theme, withStyles } from '@material-ui/core/styles';\nimport { ID_DELIMITER, Item, Person } from './utility';\n\ninterface IProps {\n  items: Array<Item>;\n  people: Array<Person>;\n  links: {\n    [itemId: string]: string[],\n  };\n  handleLinkChange: (personId: string, itemId: string) => void;\n}\n\ninterface IState {\n  tax: number;\n  tip: number;\n}\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.grey.A400,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }),\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default,\n      },\n    },\n  }),\n)(TableRow);\n\nclass Bill extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      tax: 0,\n      tip: 0,\n    };\n\n    this.onTaxChange = this.onTaxChange.bind(this);\n    this.onTipChange = this.onTipChange.bind(this);\n    this.onLinkChange = this.onLinkChange.bind(this);\n    this.getLinkStatus = this.getLinkStatus.bind(this);\n  }\n\n  onTaxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ tax: parseFloat(event.target.value) || 0 });\n  };\n\n  onTipChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ tip: parseFloat(event.target.value) || 0 });\n  };\n\n  onLinkChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const [personId, itemId] = event.target.value.split(ID_DELIMITER);\n    this.props.handleLinkChange(personId, itemId);\n  };\n\n  getLinkStatus = (personId: string, itemId: string): boolean => {\n    return this.props.links[itemId] !== undefined && this.props.links[itemId].includes(personId);\n  };\n\n  getAllFoodPrice = (): number => {\n    return this.props.items.map(i => i.price).reduce((a, b) => a + b, 0);\n  };\n\n  getPersonFoodPrice = (personId: string): number => {\n    const personItems: Array<{\n      itemPrice: number;\n      peopleCount: number;\n    }> = [];\n\n    for (const [itemId, personIds] of Object.entries(this.props.links)) {\n      if (personIds.includes(personId)) {\n        const itemPrice = this.props.items.filter(item => item.id === itemId)[0].price;\n        const peopleCount = personIds.length;\n        personItems.push({ itemPrice, peopleCount });\n      }\n    }\n\n    return personItems\n      .map(({ itemPrice, peopleCount }) => itemPrice / peopleCount)\n      .reduce((a, b) => a + b, 0);\n  };\n\n  getPersonTax = (personId: string): number => {\n    const totalPrice = this.getAllFoodPrice();\n    if (totalPrice === 0) {\n      return 0;\n    }\n    const totalTax = this.state.tax;\n    const personPrice = this.getPersonFoodPrice(personId);\n    return personPrice * totalTax / totalPrice;\n  };\n\n  getPersonTip = (personId: string): number => {\n    const totalPrice = this.getAllFoodPrice();\n    if (totalPrice === 0) {\n      return 0;\n    }\n    const totalTip = this.state.tip;\n    const personPrice = this.getPersonFoodPrice(personId);\n    return personPrice * totalTip / totalPrice;\n  };\n\n  getTotalPrice = (): number => {\n    return this.getAllFoodPrice() + this.state.tax + this.state.tip;\n  };\n\n  getPersonTotal = (personId: string): number => {\n    return this.getPersonFoodPrice(personId)\n      + this.getPersonTax(personId)\n      + this.getPersonTip(personId);\n  };\n\n  render() {\n    return (\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <StyledTableRow>\n              <StyledTableCell key=\"item\">Item</StyledTableCell>\n              <StyledTableCell key=\"price\">Price</StyledTableCell>\n\n              {this.props.people.map(({ name: person }, index: number) =>\n                <StyledTableCell key={'person-' + index}>{person}</StyledTableCell>)\n              }\n            </StyledTableRow>\n          </TableHead>\n\n          <TableBody>\n            {this.props.items.map(({ id: itemId, name: itemName, price: itemPrice }, itemIndex: number) =>\n              <StyledTableRow hover key={'item-' + itemIndex}>\n                <StyledTableCell>{itemName}</StyledTableCell>\n                <StyledTableCell>${itemPrice.toFixed(2)}</StyledTableCell>\n                {this.props.people.map(({ id: personId, name: person }, personIndex: number) => (\n                  <StyledTableCell key={'item-person-' + personIndex}>\n                    <Checkbox\n                      checked={this.getLinkStatus(personId, itemId)}\n                      value={personId + ID_DELIMITER + itemId}\n                      color=\"primary\"\n                      onChange={this.onLinkChange}\n                    />\n                  </StyledTableCell>\n                ))}\n              </StyledTableRow>,\n            )}\n\n            <StyledTableRow hover key={'dinner-total'}>\n              <StyledTableCell>All Food</StyledTableCell>\n              <StyledTableCell>${this.getAllFoodPrice().toFixed(2)}</StyledTableCell>\n              {this.props.people.map(({ id: personId }, personIndex: number) => (\n                <StyledTableCell key={'person-' + personIndex}>\n                  ${this.getPersonFoodPrice(personId).toFixed(2)}\n                </StyledTableCell>\n              ))}\n            </StyledTableRow>\n\n            <StyledTableRow hover key={'dinner-tax'}>\n              <StyledTableCell>Tax</StyledTableCell>\n              <StyledTableCell>\n                <TextField\n                  type=\"number\"\n                  value={this.state.tax || ''}\n                  required={false}\n                  onChange={this.onTaxChange}\n                  InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                  }}\n                />\n              </StyledTableCell>\n              {this.props.people.map(({ id: personId }, personIndex: number) => (\n                <StyledTableCell key={'tax-person-' + personIndex}>\n                  ${this.getPersonTax(personId).toFixed(2)}\n                </StyledTableCell>\n              ))}\n            </StyledTableRow>\n\n            <StyledTableRow hover key={'dinner-tip'}>\n              <StyledTableCell>Tip</StyledTableCell>\n              <StyledTableCell>\n                <TextField\n                  type=\"number\"\n                  value={this.state.tip || ''}\n                  required={false}\n                  onChange={this.onTipChange}\n                  InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                  }}\n                />\n              </StyledTableCell>\n              {this.props.people.map(({ id: personId }, personIndex: number) => (\n                <StyledTableCell key={'tip-person-' + personIndex}>\n                  ${this.getPersonTip(personId).toFixed(2)}\n                </StyledTableCell>\n              ))}\n            </StyledTableRow>\n\n            <StyledTableRow hover key={'dinner-person-tip'}>\n              <StyledTableCell>Total</StyledTableCell>\n              <StyledTableCell>${this.getTotalPrice().toFixed(2)}</StyledTableCell>\n              {this.props.people.map(({ id: personId }, personIndex: number) => (\n                <StyledTableCell key={'tip-person-' + personIndex}>\n                  ${this.getPersonTotal(personId).toFixed(2)}\n                </StyledTableCell>\n              ))}\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }\n}\n\nexport default Bill;\n","import React from 'react';\nimport { Item, Person, uuid } from './utility';\nimport { Divider } from '@material-ui/core';\nimport People from './People';\nimport Items from './Items';\nimport Bill from './Bill';\n\ninterface IProps {\n}\n\ninterface IState {\n  items: Array<Item>;\n  people: Array<Person>;\n  links: {\n    [itemId: string]: string[],\n  };\n\n  tax: number;\n  tip: number;\n}\n\nclass Dinner extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      items: [\n        { id: 'drink', name: 'Drink', price: 12.00 },\n        { id: 'fish', name: 'Fish', price: 12.00 },\n      ],\n      people: [\n        { id: 'jared', name: 'Jared' },\n        { id: 'liren', name: 'Liren' },\n        { id: 'roshan', name: 'Roshan' },\n        { id: 'sherif', name: 'Sherif' },\n      ],\n      links: {},\n      tax: 0,\n      tip: 0,\n    };\n\n    this.handleLinkChange = this.handleLinkChange.bind(this);\n\n    this.addPerson = this.addPerson.bind(this);\n    this.removePerson = this.removePerson.bind(this);\n\n    this.addItem = this.addItem.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n  }\n\n  handleLinkChange = (personId: string, itemId: string) => {\n    const links = this.state.links;\n    if (links[itemId] === undefined) {\n      links[itemId] = [personId];\n    } else {\n      const personIndex = links[itemId].indexOf(personId);\n      if (personIndex === -1) {\n        links[itemId].push(personId);\n      } else {\n        links[itemId].splice(personIndex, 1);\n      }\n    }\n    this.setState({ links });\n  };\n\n  addPerson = (personName: string) => {\n    const people = this.state.people;\n    people.push({ id: uuid(), name: personName });\n    this.setState({ people });\n  };\n\n  removePerson = (index: number) => {\n    const links = this.state.links;\n    const people = this.state.people;\n    const personId = people[index].id;\n    for (const itemId of Object.keys(links)) {\n      const personIndex = links[itemId].indexOf(personId);\n      if (personIndex !== -1) {\n        links[itemId].splice(personIndex, 1);\n      }\n    }\n    people.splice(index, 1);\n    this.setState({ links, people });\n  };\n\n  addItem = (itemName: string, itemPrice: number) => {\n    const items = this.state.items;\n    items.push({\n      id: uuid(),\n      name: itemName,\n      price: itemPrice,\n    });\n    this.setState({ items });\n  };\n\n  removeItem = (index: number) => {\n    const links = this.state.links;\n    const items = this.state.items;\n    delete links[items[index].id];\n    items.splice(index, 1);\n    this.setState({ links, items });\n  };\n\n  public render() {\n    return (\n      <>\n        <Divider/>\n        <h2>People</h2>\n        <People\n          people={this.state.people}\n          addPerson={this.addPerson}\n          removePerson={this.removePerson}\n        />\n        <br/>\n        <Divider/>\n        <br/>\n        <h2>Food</h2>\n        <Items\n          items={this.state.items}\n          addItem={this.addItem}\n          removeItem={this.removeItem}\n        />\n        <br/>\n        <Divider/>\n        <br/>\n        <h2>Bill</h2>\n        <Bill\n          people={this.state.people}\n          items={this.state.items}\n          links={this.state.links}\n          handleLinkChange={this.handleLinkChange}\n        />\n        <br/>\n        <br/>\n      </>\n    );\n  }\n}\n\nexport default Dinner;\n","import React from 'react';\nimport { BottomNavigation, BottomNavigationAction, Link } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport PageviewIcon from '@material-ui/icons/Pageview';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PersonIcon from '@material-ui/icons/Person';\n\nclass Footer extends React.Component {\n  public render() {\n    return (\n      <>\n        <BottomNavigation showLabels>\n          <BottomNavigationAction\n            label={(\n              <span className=\"site-uv\">\n                <span className=\"busuanzi-value\" id=\"busuanzi_value_site_uv\"/>\n              </span>\n            )}\n            icon={<PeopleIcon fontSize=\"small\"/>}\n          />\n          <BottomNavigationAction\n            label={(\n              <span className='site-pv'>\n                <span className=\"busuanzi-value\" id=\"busuanzi_value_page_pv\"/>\n              </span>\n            )}\n            icon={<PageviewIcon fontSize=\"small\"/>}>\n          </BottomNavigationAction>\n          <BottomNavigationAction\n            component={Link}\n            href=\"https://github.com/tuliren/dinner\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            label=\"Source\"\n            icon={<GitHubIcon fontSize=\"small\"/>}\n          />\n          <BottomNavigationAction\n            component={Link}\n            href=\"https://github.com/tuliren\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            label=\"(c) 2020 LiRen\"\n            icon={<PersonIcon fontSize=\"small\"/>}\n          />\n        </BottomNavigation>\n      </>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Container } from '@material-ui/core';\nimport Dinner from './Dinner';\nimport Footer from './Footer';\n\nconst App = () => {\n  return (\n    <Container className=\"Dinner\" maxWidth=\"md\">\n      <h1>Dinner Bill</h1>\n      <Dinner/>\n      <Footer/>\n    </Container>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}